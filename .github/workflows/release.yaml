name: Release
on:
  push:
    branches:
      - master
jobs:
  test-frontend:
    name: Lint and test frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Install dependencies
        run: npm install
        working-directory: betanin_client
      - name: Lint
        run: npm run lint
        working-directory: betanin_client
      - name: Check formatting
        run: npm run check-formatting
        working-directory: betanin_client
  test-backend:
    name: Lint and test backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9.x
      - name: Install dependencies
        run: pip install --user . .[dev]
      - name: Check imports
        run: isort --check-only $(git ls-files "*.py")
      - name: Check formatting
        run: black --check $(git ls-files "*.py")
      - name: Check types
        if: ${{ false }} # do not have the energy for python right now
        run: pyright .
  release-please:
    name: Run Release Please
    runs-on: ubuntu-latest
    needs: [test-frontend, test-backend]
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Release Please
        uses: google-github-actions/release-please-action@v2
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: simple
          changelog-path: CHANGELOG.md
          package-name: betanin
  build-release:
    name: Build, tag, and publish Docker image
    runs-on: ubuntu-latest
    needs: [release-please]
    if: ${{ needs.release-please.outputs.release_created }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
          version: latest
          driver-opts: image=moby/buildkit:master
      - name: Login into DockerHub
        run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      - name: Login into GitHub Container Registry
        run: echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ needs.release-please.outputs.tag_name }}
            ghcr.io/${{ github.repository }}:latest
            ${{ github.repository }}:${{ needs.release-please.outputs.tag_name }}
            ${{ github.repository }}:latest
  build-push-pypa:
    name: Build and push to PyPA
    runs-on: ubuntu-latest
    needs: [release-please]
    if: ${{ needs.release-please.outputs.release_created }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Install frontend dependencies
        run: npm install
        working-directory: betanin_client
      - name: Install frontend
        run: PRODUCTION=true npm run-script build
        working-directory: betanin_client
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9.x
      - name: Push to PyPA
        run: |
          set -e
          pip install --no-cache --upgrade build twine
          python -m build
          python -m twine upload --username "__token__" --password "${{ secrets.PYPI_TOKEN }}" --disable-progress-bar dist/*
