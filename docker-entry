#!/bin/sh

echo "!! warning, the docker volumes for this container have changed!"
echo "!! mounts in the container prefixed with /root should now be /b"
echo "!!"
echo "!! for example, with docker-compose you can set"
echo "!! volumes:"
echo "!!  - ./data:/b/.local/share/betanin/ # betanin database"
echo "!!  - ./config:/b/.config/betanin/    # betanin config"
echo "!!  - ./beets:/b/.config/beets/       # beets config"
echo "!!"
echo "!! it is also recommended that you set the UID/GID environment variables"
echo "!!"
echo "!! for more info, check the README"
echo "!! https://github.com/sentriz/betanin"
echo "!!"
echo "!! thanks!"

if [ "$(id -u)" -eq 0 ]; then
    # Running as root: install additional plugins
    if [ -n "$PIP_EXTRA_PACKAGES" ]; then
        echo "Installing additional pip packages: $PIP_EXTRA_PACKAGES"
        pip install $(echo "$PIP_EXTRA_PACKAGES" | tr ',' ' ')
        echo "Finished installing additional pip packages."
    fi

    # and drop to an unpriviledged user
    CURRENT_UID=${UID:-1000}
    CURRENT_GID=${GID:-1000}

    adduser -D -h "$HOME" -u "$UID" -g "$GID" betanin 2>/dev/null
    chown -R betanin:betanin "$HOME"
    echo "Switching to betanin user (UID: $CURRENT_UID, GID: $CURRENT_GID)"
    exec su betanin -c "/bin/sh -c '$0'"
else
    # Not running as root: warn about unsupported features
    echo " "
    echo " "
    echo "/!\ WARNING: Running this container using docker's `user` feature comes with some caveats:"
    echo "- You need to have the proper volumes mounted, with the right permissions"
    echo "- You won't be able to use additional plugins (they need to be installed by root for beets to see them)"
    echo " "
    echo " "
fi

if [ -n "$EXTRA_COMMANDS" ]; then
    echo "Launching extra commands: $EXTRA_COMMANDS"
    echo "$EXTRA_COMMANDS" | awk -v RS=',' '{print}' | while read -r cmd; do
        if [ -n "$cmd" ]; then
            sh -c "$cmd"
        fi
    done
fi

exec betanin
